name: Deploy to AWS ECS

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPO: my-app
      ECS_CLUSTER: my-cluster
      ECS_SERVICE: my-service
      IMAGE_TAG: latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # âœ… Manual approval step before terraform apply
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          approvers: user1,user2   # replace with GitHub usernames
          minimum-approvals: 1
          instructions: "Please review the Terraform plan output and approve to proceed with 'terraform apply'."

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        run: |
          ECR_URI=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPO }}
          docker build -t $ECR_URI:${{ env.IMAGE_TAG }} .
          docker push $ECR_URI:${{ env.IMAGE_TAG }}
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment
